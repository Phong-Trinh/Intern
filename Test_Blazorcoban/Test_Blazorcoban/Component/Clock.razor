@page "/Clock"
<link href="../Component/DongHo.razor.css" rel="stylesheet" />
    <div class="Timer" style="background-color: @Color;" >
        <div class="container">
            <h1>@Title</h1>
            <p>@miCounter:@seCounter </p>  
            <button @onclick="StartTimer">@startButt</button> 
            <button @onclick="ResetTimer">Reset</button>
        </div>
    </div> 
    <Counter ListTick="tick"></Counter>
    @code {
        private static System.Timers.Timer aTimer;
        private int seCounter = 00;
        [Parameter]
        public int miKind { get; set; } = 25;
        [Parameter]
        public int miCounter { get; set; } = 25;
        [Parameter]
        public string Title { get; set; } = "Focus";
        [Parameter]
        public string Color { get; set; } = "rgb(249 143 143)";
        private string startButt = "Start";
        private string[] tick = new string[5] { "white", "white", "white", "white", "white" };
        private Counter _counter = new Counter();
        protected override void OnInitialized()
        {
            base.OnInitialized();
            {
                miCounter = 25;
                seCounter = 00;
                aTimer = new System.Timers.Timer(1000);
                aTimer.Elapsed += CountDownTimer;
            }
        }
        public void UpdateCounter()
        {
            miCounter = miKind;
        }
        public void ChangeStartButton()
        {
            switch (startButt)
            {
                case "Start":
                    {
                        startButt = "Pause";
                        break;
                    }
                case "Pause":
                    {
                        startButt = "Start";
                        break;
                    }
            }
        }
        public void StartTimer()
        {
            if (startButt == "Start")
            {
                aTimer.Start();
            }
            else
            {
                aTimer.Stop();
            }
            ChangeStartButton();
        }
        public void ResetTick()
        {
            for(int i=0;i<5;i++)
            {
                tick[i] = "white";
            }
        }
        public void ResetTimer()
        {
            seCounter = 00;
            miCounter = miKind;
            startButt = "Start";
            ResetTick();
            aTimer.Stop();
            StateHasChanged();
        }
        public void CountDownTimer(Object source, System.Timers.ElapsedEventArgs e)
        {
            if (seCounter > 0)
            {
                seCounter -= 1;
            }
            else if (seCounter == 0 && miCounter > 0)
            {
                seCounter = 59;
                miCounter -= 1;
                if (miCounter == miKind - 1 * miKind / 5 - 1)
                    tick[0] = "yellow";
                if (miCounter == miKind - 2 * miKind / 5 - 1)
                    tick[1] = "yellow";
                if (miCounter == miKind - 3 * miKind / 5 - 1)
                    tick[2] = "yellow";
                if (miCounter == miKind - 4 * miKind / 5 - 1)
                    tick[3] = "yellow";
            }
            else
            {
                aTimer.Stop();
                tick[4] = "yellow";
                Title = "Done";
            }
            InvokeAsync(StateHasChanged);
        }

    }